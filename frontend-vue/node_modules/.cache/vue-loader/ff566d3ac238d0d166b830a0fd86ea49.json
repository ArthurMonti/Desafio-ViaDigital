{"remainingRequest":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\src\\components\\LabelEdit.vue?vue&type=style&index=0&id=a2e3ffc4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\src\\components\\LabelEdit.vue","mtime":1628617249747},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLmlucHV0OmFjdGl2ZXsNCiAgICB3aWR0aDogYXV0bzsNCn0NCg=="},{"version":3,"sources":["LabelEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA","file":"LabelEdit.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n      <div @click=\"onClick\" v-if=\"!edit\" >{{text}}</div>\r\n      <input ref=\"input\" class=\"input\" type=\"text\"  onfocus=\"this.style.width = ((this.value.length + 1) * 8) + 'px';\" @keyup.enter=\"returnText\" @blur=\"returnText\" v-if=\"edit\" v-model=\"label\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data()\r\n    {\r\n        return {\r\n            label: \"\",\r\n            edit: false\r\n        }\r\n        \r\n    },\r\n    props:{\r\n        text: String,\r\n    },\r\n    methods:{\r\n        initText: function()\r\n        {\r\n            this.label = this.text;\r\n        },\r\n        onClick: function()\r\n        {\r\n            this.edit= true;\r\n            this.initText();\r\n            this.$nextTick(() => this.$refs.input.focus());\r\n            \r\n        },\r\n        returnText: function()\r\n        {\r\n            this.edit = false;\r\n            this.$emit('updatedText',this.label);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.input:active{\r\n    width: auto;\r\n}\r\n</style>"]}]}