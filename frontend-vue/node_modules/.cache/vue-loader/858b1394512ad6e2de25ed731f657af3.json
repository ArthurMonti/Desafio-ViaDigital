{"remainingRequest":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\src\\views\\Board.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\src\\views\\Board.vue","mtime":1628734243170},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\arthu\\Desktop\\ViaDigital\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRleHQgew0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KfQ0KDQouYnRuOmhvdmVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2VkZWRlZDsNCn0NCg0KLmJvYXJkIHsNCiAgbWFyZ2luLXRvcDogMSU7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsNCiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7DQp9DQoNCi5DYXJkIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Q3ZDdkNzsNCiAgbWFyZ2luLWxlZnQ6IDEuNSU7DQp9DQoNCi5wbGFjZWhvbGRlciB7DQogIGJhY2tncm91bmQ6ICNjZWNlY2U7DQogIGJvcmRlci1yYWRpdXM6IDAuNHJlbTsNCiAgdHJhbnNmb3JtOiBzY2FsZVkoMC44NSk7DQogIHRyYW5zZm9ybS1vcmlnaW46IDAlIDAlOw0KfQ0KLmF2b2lkLWNsaWNrcyB7DQogIHBvaW50ZXItZXZlbnRzOiBub25lOw0KfQ0KLmxhbmUgew0KICBtYXgtd2lkdGg6IDEwMCU7DQogIHdpZHRoOiAyMnJlbTsNCiAgYm94LXNoYWRvdzogMCAwLjFyZW0gMC4ycmVtIDAgI2RjZGNkYzsNCiAgbWFyZ2luOiA0JSAwLjUlOw0KfQ0K"},{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2VA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Board.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <Container :drop-placeholder=\"{ className: 'placeholder' }\" class=\"board\">\r\n        <Draggable v-for=\"container in containers\" :key=\"container.id\">\r\n          <div class=\"card Card\">\r\n            <header class=\"card-header\">\r\n              <p class=\"card-header-title\">\r\n                <LabelEdit\r\n                  :text=\"container.name\"\r\n                  @updatedText=\"textUpdated($event, container)\"\r\n                ></LabelEdit>\r\n              </p>\r\n\r\n              <div class=\"navbar-item has-dropdown is-hoverable\">\r\n                <a class=\"navbar-link is-arrowless\">\r\n                  <img\r\n                    src=\"../assets/menu.png\"\r\n                    alt=\"Minha Figura\"\r\n                    class=\"image is-24x24\"\r\n                  />\r\n                </a>\r\n\r\n                <div class=\"navbar-dropdown is-right\">\r\n                  <ModalConfirm\r\n                    @confirm=\"confirmDelete($event, container)\"\r\n                  ></ModalConfirm\r\n                  ><!--// Item de Deletar -->\r\n\r\n                  <a\r\n                    @click=\"MovContainerDireita(container)\"\r\n                    class=\"navbar-item\"\r\n                  >\r\n                    Mover para direita\r\n                  </a>\r\n                  <a\r\n                    @click=\"MovContainerEsquerda(container)\"\r\n                    class=\"navbar-item\"\r\n                  >\r\n                    mover para esquerda\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </header>\r\n            <div class=\"lane\">\r\n              <div>\r\n                <Container\r\n                  group-name=\"container\"\r\n                  @drag-start=\"DragStart(container, $event)\"\r\n                  @drop=\"DropEnd(container, $event)\"\r\n                  :get-child-payload=\"getChildPayload\"\r\n                  :drop-placeholder=\"{ className: 'placeholder' }\"\r\n                >\r\n                  <Draggable v-for=\"card in container.cards\" :key=\"card.id\">\r\n                    <Card>\r\n                      <Modal\r\n                        :card=\"card\"\r\n                        @close=\"closeModal($event, card, container)\"\r\n                      ></Modal>\r\n                    </Card>\r\n                  </Draggable>\r\n                </Container>\r\n              </div>\r\n            </div>\r\n            <footer class=\"card-footer\">\r\n              <a @click=\"newCard(container)\" class=\"card-footer-item\"\r\n                >Adicionar Cartão</a\r\n              >\r\n            </footer>\r\n          </div>\r\n        </Draggable>\r\n\r\n        <div class=\"card Card\">\r\n          <header class=\"card-header\">\r\n            <a\r\n              type=\"button\"\r\n              @click=\"newContainer\"\r\n              class=\"card-header-title btn\"\r\n            >\r\n              Adicionar Coluna +\r\n            </a>\r\n          </header>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Card from \"../components/Card.vue\";\r\nimport LabelEdit from \"../components/LabelEdit.vue\";\r\nimport Modal from \"../components/Modal.vue\";\r\nimport ModalConfirm from \"../components/ModalConfirm.vue\";\r\nimport { Container, Draggable } from \"vue-smooth-dnd\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      User: {},\r\n      containers: [],\r\n      draggingCard: {\r\n        container: \"\",\r\n        index: -1,\r\n        cardData: {},\r\n      },\r\n    };\r\n  },\r\n  created: async function () {\r\n    this.User = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (this.User == null) {\r\n      this.$router.push(\"/\");\r\n      alert(\"Realize o Login para acessar a página de Quadros!\");\r\n    } else {\r\n      await axios\r\n        .get(\"https://localhost:44360/Containers/filter/\" + this.User.id)\r\n        .then((res) => {\r\n          this.containers = res.data;\r\n          this.containers.sort(this.compare);\r\n          this.containers.forEach((container) => {\r\n            axios\r\n              .get(\"https://localhost:44360/Cards/filter/\" + container.id)\r\n              .then((res) => {\r\n                container.cards = res.data;\r\n                container.cards.sort(this.compare);\r\n              })\r\n              .catch((err) => {\r\n                alert(err);\r\n              });\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  },\r\n  components: {\r\n    LabelEdit,\r\n    Card,\r\n    Container,\r\n    Draggable,\r\n    Modal,\r\n    ModalConfirm,\r\n  },\r\n  methods: {\r\n    DragStart: function (container, dragResult) {\r\n      // faz a troca dos cards ( quando segura)\r\n      const { payload, isSource } = dragResult;\r\n      if (isSource) {\r\n        this.draggingCard = {\r\n          container,\r\n          index: payload.index,\r\n          cardData: {\r\n            ...this.containers[container.position].cards[payload.index],\r\n          },\r\n        };\r\n      }\r\n    },\r\n    DropEnd: function (container, dropResult) {\r\n      // faz a troca dos cards ( quando solta)\r\n      const { removedIndex, addedIndex } = dropResult;\r\n      if (\r\n        container === this.draggingCard.container &&\r\n        removedIndex === addedIndex\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      if (removedIndex !== null) {\r\n        container.cards.splice(removedIndex, 1);\r\n        this.updatePosition(removedIndex, addedIndex, container);\r\n      }\r\n      if (addedIndex !== null) {\r\n        this.draggingCard.cardData.containerID = container.id;\r\n        container.cards.splice(addedIndex, 0, this.draggingCard.cardData);\r\n        this.updatePosition(removedIndex, addedIndex, container);\r\n      }\r\n    },\r\n    getChildPayload: function (index) {\r\n      return {\r\n        index,\r\n      };\r\n    },\r\n    textUpdated: function ($event, container) {\r\n      //Serve para atualizar o Name do container\r\n      container.name = $event;\r\n      this.updateContainer(container);\r\n    },\r\n    newCard: function (container) {\r\n      // cria uma nova\r\n      var card = {\r\n        name: \"Cartão sem título \",\r\n        position: container.cards.length,\r\n        description: \"\",\r\n        containerID: container.id,\r\n      };\r\n      axios\r\n        .post(\"https://localhost:44360/Cards\", card)\r\n        .then((res) => {\r\n          card.id = res.data.id;\r\n          container.cards.push(card);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    newContainer: function () // cria um novo container\r\n    {\r\n      var container = {\r\n        name: \"Container sem Título\",\r\n        id: 0,\r\n        idUser: this.User.id,\r\n        position: this.containers.length,\r\n        cards: [],\r\n      };\r\n      axios\r\n        .post(\"https://localhost:44360/Containers\", container)\r\n        .then((res) => {\r\n          container.id = res.data.id;\r\n          this.containers.push(container);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    closeModal: function (\r\n      $event,\r\n      card,\r\n      container //Atualiza o Card quando acessado ou deleta ele\r\n    ) {\r\n      if ($event.isDelete == true) {\r\n        var index = container.cards.indexOf(card);\r\n        container.cards.splice(index, 1);\r\n        this.updatePosition(index, null, container);\r\n        this.deleteCard(card);\r\n      } else {\r\n        card = $event.card;\r\n        this.updateCard(card);\r\n      }\r\n    },\r\n    confirmDelete: function ($event, container) {\r\n      if ($event) {\r\n        var index = this.containers.indexOf(container);\r\n        this.containers.splice(index, 1);\r\n        for (index; index < this.containers.length; index++) {\r\n          this.containers[index].position--;\r\n          this.updateContainer(this.containers[index]);\r\n        }\r\n        this.deleteContainer(container);\r\n      }\r\n    },\r\n\r\n    updatePosition: function (\r\n      removedIndex,\r\n      addedIndex,\r\n      container //Atualiza a posição do Card.\r\n    ) {\r\n      if (removedIndex !== null && addedIndex !== null) {\r\n        var menor = removedIndex < addedIndex ? removedIndex : addedIndex;\r\n        for (; menor < container.cards.length; menor++) {\r\n          container.cards[menor].position = menor;\r\n          this.updateCard(container.cards[menor]);\r\n        }\r\n      } else {\r\n        var i = 0;\r\n        if (removedIndex !== null) {\r\n          for (i = removedIndex; i < container.cards.length; i++) {\r\n            container.cards[i].position = i;\r\n            this.updateCard(container.cards[i]);\r\n          }\r\n        }\r\n        if (addedIndex !== null) {\r\n          for (i = addedIndex; i < container.cards.length; i++) {\r\n            container.cards[i].position = i;\r\n\r\n            this.updateCard(container.cards[i]);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    MovContainerDireita: function (container) {\r\n      if (container.position != this.containers.length - 1) {\r\n        this.containers[container.position + 1].position--;\r\n        container.position++;\r\n        this.updateContainer(container);\r\n        this.updateContainer(this.containers[container.position]);\r\n        this.containers.sort(this.compare);\r\n      }\r\n    },\r\n    MovContainerEsquerda: function (container) {\r\n      if (container.position != 0) {\r\n        this.containers[container.position - 1].position++;\r\n        container.position--;\r\n\r\n        this.updateContainer(container);\r\n        this.updateContainer(this.containers[container.position]);\r\n        this.containers.sort(this.compare);\r\n      }\r\n    },\r\n    updateCard: function (card) {\r\n      axios\r\n        .put(\"https://localhost:44360/Cards/\" + card.id, card)\r\n        .then()\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    updateContainer: function (container) {\r\n      axios\r\n        .put(\"https://localhost:44360/Containers/\" + container.id, container)\r\n        .then()\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    deleteCard: function (card) {\r\n      axios\r\n        .delete(\"https://localhost:44360/Cards/\" + card.id)\r\n        .then()\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    deleteContainer: function (container) {\r\n      container.cards.forEach((card) => {\r\n        this.deleteCard(card);\r\n      });\r\n      axios\r\n        .delete(\"https://localhost:44360/Containers/\" + container.id)\r\n        .then()\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    compare: function (a, b) {\r\n      // serve para ordenar a lista pela posição\r\n      if (a.position > b.position) return 1;\r\n      if (b.position > a.position) return -1;\r\n\r\n      return 0;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.text {\r\n  text-align: left;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #ededed;\r\n}\r\n\r\n.board {\r\n  margin-top: 1%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n}\r\n\r\n.Card {\r\n  background-color: #d7d7d7;\r\n  margin-left: 1.5%;\r\n}\r\n\r\n.placeholder {\r\n  background: #cecece;\r\n  border-radius: 0.4rem;\r\n  transform: scaleY(0.85);\r\n  transform-origin: 0% 0%;\r\n}\r\n.avoid-clicks {\r\n  pointer-events: none;\r\n}\r\n.lane {\r\n  max-width: 100%;\r\n  width: 22rem;\r\n  box-shadow: 0 0.1rem 0.2rem 0 #dcdcdc;\r\n  margin: 4% 0.5%;\r\n}\r\n</style>"]}]}